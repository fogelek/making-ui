<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="description" content="Opinionated guide through web development and design">
    <meta name="keywords" content="HTML, CSS, JavaScript, TypeScript, React, UI, WebDev">
    <meta name="author" content="Michal Fogelman">
    <meta name="viewport" content="width=device-width">
    <title>{{ metadata.title }}</title>
    <link rel="stylesheet" href="{{ '/css/reset.css' | url }}"/>
    <link rel="stylesheet" href="{{ '/css/style.css' | url }}"/>
    {% if stylesheet %}
        <link rel="stylesheet" href="{{ '/css/content/' + stylesheet + '.css' | url}}"/>
    {% endif %}
    <script type="text/javascript">
        if ('paintWorklet' in CSS){
            CSS.paintWorklet.addModule("/js/gradientee-worklet.min.js");
        }
    </script>
    <script type="text/javascript" src="/js/gradientee.min.js"></script>
</head>
<body>
    <div class="bg-container">
        <canvas></canvas>
    </div>
    {% if title %}
        {% include "partials/post.njk" %}
    {% else %}
        {% include "partials/main.njk" %}
    {% endif %}
    <script>
        if (!("paintWorklet" in CSS)) {
            // render canvas
            window.addEventListener("resize", repaint);

            var debounce = null;
            function repaint() {
                if (debounce) {
                    clearTimeout(debounce);
                    debounce = null;
                }
                debounce = setTimeout(() => {
                    const canvas = document.querySelector(".bg-container canvas");
                    canvas.width = document.documentElement.clientWidth;
                    canvas.height = document.documentElement.clientHeight;
                    const ctx = canvas.getContext("2d");
                    gradientee(ctx, {
                        width: canvas.clientWidth,
                        height: canvas.clientHeight,
                        colorFrom: "#0b0",
                        colorTo: "#00b",
                        boxSize: 60,
                        seed: 3200,
                        deflectionLevel: 20,
                        colorRandomness: 0,
                    });
                    debounce = null;
                }, 150);
            }

            repaint();
        }

        class ArticleBox extends HTMLElement {
        constructor() {
            super();
            const article = document.createElement('article');
            while (this.children.length > 0) {
                article.appendChild(this.children[0]);
            }

            this.append(article);
            const box = document.createElement('div');
            box.classList.add('box');
            if (this.hasAttribute('animate')) {
                box.classList.add('animate');
            }
            this.append(box);
        }
    }

    customElements.define('article-box', ArticleBox);
</script>
</body>
</html>